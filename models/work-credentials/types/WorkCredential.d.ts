/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * payee address
 */
export type To = string;
/**
 * payer address
 */
export type From = string;
/**
 * whether or not DID is payer
 */
export type IsPayer = boolean;
/**
 * work summary
 */
export type Summary = string;
/**
 * work detail
 */
export type Detail = string;
/**
 * current formats are url or cid
 */
export type Format = string;
/**
 * work deliverable value(url/cid)
 */
export type Value = string;
/**
 * work deliverables
 */
export type Deliverables = DeliverableItem[];
/**
 * paid value
 */
export type Value1 = string;
/**
 * paid token symbol
 */
export type TokenSymbol = string;
/**
 * paid token decimal
 */
export type TokenDecimal = number;
/**
 * fiat price at the time of the transaction
 */
export type Value2 = string;
/**
 * currently only support USD
 */
export type FiatSymbol = string;
/**
 * network id of the transaction
 */
export type NetworkId = number;
/**
 * Time stamp of transaction occurrence
 */
export type IssuedTimestamp = string;
/**
 * hash of the transaction
 */
export type TxHash = string;
/**
 * currently support fulltime, parttime, and onetime
 */
export type JobType = string;
/**
 * work genre e.g, Dev, Design etc
 */
export type Genre = string;
/**
 * signature of peyee
 */
export type ToSig = string;
/**
 * signature of peyer
 */
export type FromSig = string;
/**
 * Address of person signing as payee
 */
export type ToSigner = string;
/**
 * Address of person signing as payer
 */
export type FromSigner = string;
/**
 * Time stamp of work started
 */
export type StartTimestamp = string;
/**
 * Time stamp of work ended
 */
export type EndTimestamp = string;
export type RelatedAddress = string[];
export type RelatedTxHashes = string[];
/**
 * work tags
 */
export type Tags = string[];
/**
 * hash value of all work descriptions(summary, detail, deliverables)
 */
export type DeliverableHash = string;
/**
 * a transaction platform if exists e.g, gitcoin
 */
export type Platform = string;
/**
 * work detail
 */
export type Detail1 = string;
/**
 * work genre e.g, Dev, Design etc
 */
export type Genre1 = string;
/**
 * subtasks
 */
export type Subtasks = Subtask[];
export type CreatedAt = string;
export type UpdatedAt = string;

export interface WorkCredential {
  to: To;
  from: From;
  isPayer?: IsPayer;
  summary: Summary;
  detail?: Detail;
  deliverables?: Deliverables;
  value: Value1;
  tokenSymbol: TokenSymbol;
  tokenDecimal?: TokenDecimal;
  fiatValue?: Value2;
  fiatSymbol?: FiatSymbol;
  networkId: NetworkId;
  issuedTimestamp: IssuedTimestamp;
  txHash?: TxHash;
  jobtype?: JobType;
  genre?: Genre;
  toSig?: ToSig;
  fromSig?: FromSig;
  toSigner?: ToSigner;
  fromSigner?: FromSigner;
  startTimestamp?: StartTimestamp;
  endTimestamp?: EndTimestamp;
  relatedAddresses?: RelatedAddress;
  relatedTxHashes?: RelatedTxHashes;
  tags?: Tags;
  deliverableHash?: DeliverableHash;
  platform?: Platform;
  subtasks?: Subtasks;
  createdAt?: CreatedAt;
  updatedAt?: UpdatedAt;
}
export interface DeliverableItem {
  format?: Format;
  value?: Value;
  [k: string]: unknown;
}
export interface Subtask {
  detail?: Detail1;
  genre?: Genre1;
  [k: string]: unknown;
}
